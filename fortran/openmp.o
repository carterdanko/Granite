      program fortran
      INTEGER SIZE, TID, SIZETHREADS,CHUNK, omp_get_num_threads,
     +	      omp_get_thread_num
      INTEGER i, j
      PARAMETER (SIZE = 10)
      PARAMETER (CHUNKSIZE=10)
      
      real matrixOne(size,size), matrixTwo(size,size)
      real vectorOne(size), vectorTwo(size)
      real matrixMatmul(size,size), vectorResult(size)      
      real matrixTranspose(size, size), vectorShift(size)

      TID = omp_get_thread_num()
      IF (TID .EQ. 0) THEN
	SIZETHREADS = omp_get_num_threads()
      end if

      DO I = 1, size 
	vectorOne(i)=i
	vectorTwo(i)=(i*3)
	vectorResult(i) = vectorOne(i) * vectorTwo(i)
      enddo
      chunk = chunksize

!$OMP PARALLEL SHARED(matrixOne, matrixTwo, vectorOne, vectorTwo, sizethreads, chunk) private(i,j,TID) 


!$OMP do schedule(static, chunk)
      do 30 i=1, size
	do 30 j=1, size 
        matrixOne(i,j) = i + j + vectorTwo(j)
	matrixTwo(i,j) = i * j * vectorOne(j)
  30  CONTINUE

      matrixMatmul = matmul(matrixOne, matrixTwo)
      matrixTranspose = transpose(matrixTwo)
      vectorShift = cshift(vectorOne,10)
!$OMP end parallel

      end
