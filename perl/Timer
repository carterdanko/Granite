#Carter Danko
#The point of this program is to record the time of hanoi or any program for it to run.
#And it captures the time and outputs it into the terminal, and into a text file as fileOutput.txt.
#This txt file is so that the use can >/dev/null and it will still show the time in the txt file.
use Time::HiRes qw(gettimeofday);
$runTimes = @ARGV[0];
$fileName = @ARGV[1];
open(MYOUTFILE, ">>fileOutput.txt");
system("$fileName", "> /dev/null");
if ($? == -1){
print "This is not a valid file name\n";
exit;
}
if ($runTimes !~ /\d/ or $runTimes <= 0){
print "Please enter a valid number \n";
exit;
}

$beginning = Time::HiRes::gettimeofday();
$i = 0;
for($i=0;$i < $runTimes;$i++){
	system("$fileName", "@ARGV[2]", "@ARGV[3]", "@ARGV[4]");
}

$elapsed = ((Time::HiRes::gettimeofday() - $beginning)*1000)/$runTimes;
$elapsedTotal = ((Time::HiRes::gettimeofday() - $beginning)*1000);
print "The number of runtimes was @ARGV[0] and number of parameters was @ARGV[2] \n";
printf "%.2f", $elapsed;
print " milliseconds on average \n";
printf "%.2f", $elapsedTotal;
print " Total milliseconds \n";
print MYOUTFILE "The number of runtimes was @ARGV[0] and number of parameters was @ARGV[2]\n";
printf MYOUTFILE "%.2f", $elapsed;
print MYOUTFILE " milliseconds on average \n";
printf MYOUTFILE "%.2f", $elapsedTotal;
print MYOUTFILE " Total milliseconds \n";
close (MYOUTFILE);

